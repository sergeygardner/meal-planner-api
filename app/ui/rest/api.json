{
  "openapi": "3.0.0",
  "info": {
    "title": "Meal Planner",
    "description": "This is the Meal Planner API",
    "contact": {
      "email": "api@ml-planner.co.uk"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://ml-planner.co.uk:8090/api/v1",
      "description": "Meal Planner API"
    }
  ],
  "tags": [
    {
      "name": "admin",
      "description": "Operations available for administrators"
    },
    {
      "name": "auth",
      "description": "Operations available to authentication"
    },
    {
      "name": "user",
      "description": "Operations available to user"
    },
    {
      "name": "recipe",
      "description": "Operations available to recipe"
    },
    {
      "name": "recipe_category",
      "description": "Operations available to recipe category"
    },
    {
      "name": "recipe_ingredient",
      "description": "Operations available to recipe ingredient"
    },
    {
      "name": "recipe_process",
      "description": "Operations available to recipe process"
    },
    {
      "name": "category",
      "description": "Operations available to category"
    },
    {
      "name": "ingredient",
      "description": "Operations available to ingredient"
    },
    {
      "name": "unit",
      "description": "Operations available to unit"
    },
    {
      "name": "planner",
      "description": "Operations available to planner"
    }
  ],
  "paths": {
    "/auth": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "check authentication",
        "description": "By passing in the empty options and in not empty header,\nyou can ensure for authentication in the system\n",
        "operationId": "AuthCheck",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is passed"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/credentials": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "getting data's confirmation for credentials",
        "description": "By passing in the appropriate options, \nyou can get data for confirmation your identity in the system\n",
        "operationId": "AuthCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include username and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCredentialsRequest"
              }
            }
          }
        },
        "responses": {
          "100": {
            "description": "Sent data to confirm for credentials"
          },
          "400": {
            "description": "Request is invalid"
          }
        }
      }
    },
    "/auth/confirmation": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "getting token",
        "description": "By passing in the appropriate options, \nyou can get a token in the system\n",
        "operationId": "AuthConfirmation",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for getting a token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "refreshing token",
        "description": "By passing in the appropriate options, \nyou can refresh the token in the system\n",
        "operationId": "AuthRefresh",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "user registration",
        "description": "By passing in the appropriate options, \nyou can register the user in the system\n",
        "operationId": "AuthRegister",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for registering",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "user info",
        "description": "By passing in the appropriate options, \nyou can get the user in the system\n",
        "operationId": "UserInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "user updating",
        "description": "By passing in the appropriate options, \nyou can update the user in the system\n",
        "operationId": "UserUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for user updating",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "user deleting",
        "description": "By passing in the appropriate options, \nyou can delete the user in the system\n",
        "operationId": "UserDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for user deleting",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserDeleteResponse"
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of recipes of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipes of the user in the system\n",
        "operationId": "RecipesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipes of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe"
        ],
        "summary": "creating of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe of the user in the system\n",
        "operationId": "RecipeCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe of the user in the system\n",
        "operationId": "RecipeInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe"
        ],
        "summary": "updating of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe of the user in the system\n",
        "operationId": "RecipeUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe"
        ],
        "summary": "deleting of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe of the user in the system\n",
        "operationId": "RecipeDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/categories": {
      "get": {
        "tags": [
          "recipe_category"
        ],
        "summary": "info of recipe's categories of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's categories of the user in the system\n",
        "operationId": "RecipeCategoriesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's categories of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeCategoriesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_category"
        ],
        "summary": "creating of the recipe's category of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's category of the user in the system\n",
        "operationId": "RecipeCategoryCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's category of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeCategoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeCategoryInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/categories/{category_id}": {
      "get": {
        "tags": [
          "recipe_category"
        ],
        "summary": "info of the recipe's category of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's category of the user in the system\n",
        "operationId": "RecipeCategoryInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info og the recipe's category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeCategoryInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_category"
        ],
        "summary": "updating of the recipe's category of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's category of the user in the system\n",
        "operationId": "RecipeCategoryUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe's category of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeCategoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeCategoryInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_category"
        ],
        "summary": "deleting of the recipe's category of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's category of the user in the system\n",
        "operationId": "RecipeCategoryDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the recipe's ingredients of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's ingredients of the user in the system\n",
        "operationId": "RecipeIngredientsInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's ingredients of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeIngredientsInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "creating of the recipe's ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's ingredient of the user in the system\n",
        "operationId": "RecipeIngredientCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's ingredient of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeIngredientUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeIngredientInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the recipe's ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's ingredient of the user in the system\n",
        "operationId": "RecipeIngredientInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeIngredientInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "updating of the recipe's ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's ingredient of the user in the system\n",
        "operationId": "RecipeIngredientUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe's ingredient of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeIngredientUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeIngredientInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "deleting of the recipe's ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's ingredient of the user in the system\n",
        "operationId": "RecipeIngredientDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/alt-names": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "RecipeIngredientAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/pictures": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the recipe's ingredient pictures of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's ingredient pictures of the user in the system\n",
        "operationId": "RecipeIngredientPicturesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's ingredient pictures of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicturesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "creating of the recipe's ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's ingredient picture of the user in the system\n",
        "operationId": "RecipeIngredientPictureCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's ingredient picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the recipe's ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's ingredient picture of the user in the system\n",
        "operationId": "RecipeIngredientPictureInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "updating of the recipe's ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's ingredient picture of the user in the system\n",
        "operationId": "RecipeIngredientPictureUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe's ingredient picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "deleting of the recipe's ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's ingredient picture of the user in the system\n",
        "operationId": "RecipeIngredientPictureDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's ingredient picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/pictures/{picture_id}/alt-names": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "RecipeIngredientPictureAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientPictureAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/pictures/{picture_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientPictureAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientPictureAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeIngredientPictureAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/measures": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the recipe's measures of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's measures of the user in the system\n",
        "operationId": "RecipeMeasuresInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's measures of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeMeasuresInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "creating of the recipe's measure of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's measure of the user in the system\n",
        "operationId": "RecipeMeasureCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's measure of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeMeasureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's measure of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeMeasureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/ingredients/{ingredient_id}/measures/{measure_id}": {
      "get": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "info of the recipe's measure of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's measure of the user in the system\n",
        "operationId": "RecipeMeasureInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/MeasureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's measure of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeMeasureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "updating of the recipe's measure of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's measure of the user in the system\n",
        "operationId": "RecipeMeasureUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/MeasureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe's measure of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeMeasureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's measure of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeMeasureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_ingredient"
        ],
        "summary": "deleting of the recipe's measure of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's measure of the user in the system\n",
        "operationId": "RecipeMeasureDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/MeasureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's measure of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the recipe's processes of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's processes of the user in the system\n",
        "operationId": "RecipeProcessesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's processes of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeProcessesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_process"
        ],
        "summary": "creating of the recipe's process of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's process of the user in the system\n",
        "operationId": "RecipeProcessCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's process of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeProcessUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeProcessInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the recipe's process of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's process of the user in the system\n",
        "operationId": "RecipeProcessInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeProcessInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_process"
        ],
        "summary": "updating of the recipe's process of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's process of the user in the system\n",
        "operationId": "RecipeProcessUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe's process of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeProcessUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeProcessInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_process"
        ],
        "summary": "deleting of the recipe's process of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's process of the user in the system\n",
        "operationId": "RecipeProcessDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's process of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}/alt-names": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "RecipeProcessAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_process"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_process"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_process"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}/pictures": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of recipe's process pictures of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's process pictures of the user in the system\n",
        "operationId": "RecipeProcessPicturesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process pictures of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicturesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_process"
        ],
        "summary": "creating recipe's process picture of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's process picture of the user in the system\n",
        "operationId": "RecipeProcessPictureCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's process picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the recipe's process picture of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's process picture of the user in the system\n",
        "operationId": "RecipeProcessPictureInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_process"
        ],
        "summary": "updating of the recipe's process picture of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's process picture of the user in the system\n",
        "operationId": "RecipeProcessPictureUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for updating of the recipe's process picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's process picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_process"
        ],
        "summary": "deleting of the recipe's process picture of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's process picture of the user in the system\n",
        "operationId": "RecipeProcessPictureDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's process picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}/pictures/{picture_id}/alt-names": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "RecipeProcessPictureAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe_process"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessPictureAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/processes/{process_id}/pictures/{picture_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "recipe_process"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessPictureAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe_process"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessPictureAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe_process"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeProcessPictureAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/ProcessId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/alt-names": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "RecipeAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "RecipeAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "RecipeAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/pictures": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the recipe's pictures of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's pictures of the user in the system\n",
        "operationId": "RecipePicturesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's pictures of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicturesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe"
        ],
        "summary": "creating of the recipe's picture of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's picture of the user in the system\n",
        "operationId": "RecipePictureCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the recipe's picture of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's picture of the user in the system\n",
        "operationId": "RecipePictureInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe"
        ],
        "summary": "updating of the recipe's picture of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's picture of the user in the system\n",
        "operationId": "RecipePictureUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe's picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe"
        ],
        "summary": "deleting of the recipe's picture of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's picture of the user in the system\n",
        "operationId": "RecipePictureDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe's picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/pictures/{picture_id}/alt-names": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "RecipePictureAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipe"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "RecipePictureAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/recipes/{recipe_id}/pictures/{picture_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "recipe"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "RecipePictureAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "recipe"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "RecipePictureAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recipe"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "RecipePictureAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/units": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "info of the units of the user",
        "description": "By passing in the appropriate options, \nyou can get the units of the user in the system\n",
        "operationId": "RecipeUnitsInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the units of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "unit"
        ],
        "summary": "creating of the recipe's unit of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's unit of the user in the system\n",
        "operationId": "RecipeUnitCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe's unit of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the unit of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/units/{unit_id}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "info of the unit of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's unit of the user in the system\n",
        "operationId": "RecipeUnitInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/UnitId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the unit of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "summary": "updating of the unit of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's unit of the user in the system\n",
        "operationId": "RecipeUnitUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/UnitId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the unit of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the unit of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "unit"
        ],
        "summary": "deleting of the recipe's unit of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's unit of the user in the system\n",
        "operationId": "RecipeUnitDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/UnitId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the unit of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the categories of the user",
        "description": "By passing in the appropriate options, \nyou can get the categories of the user in the system\n",
        "operationId": "CategoriesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the categories of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "creating of the category of the user",
        "description": "By passing in the appropriate options, \nyou can add a category of the user in the system\n",
        "operationId": "CategoryCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the category of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the category of the user",
        "description": "By passing in the appropriate options, \nyou can get the category of the user in the system\n",
        "operationId": "eCategoryInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "category"
        ],
        "summary": "updating of the category of the user",
        "description": "By passing in the appropriate options, \nyou can update the category of the user in the system\n",
        "operationId": "CategoryUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the category of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "deleting of the category of the user",
        "description": "By passing in the appropriate options, \nyou can delete the category of the user in the system\n",
        "operationId": "CategoryDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the category of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}/alt-names": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "CategoryAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "CategoryAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "CategoryAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "category"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "CategoryAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "CategoryAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}/pictures": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of category pictures of the user",
        "description": "By passing in the appropriate options, \nyou can get the category pictures of the user in the system\n",
        "operationId": "CategoryPicturesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the category pictures of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicturesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "creating category picture of the user",
        "description": "By passing in the appropriate options, \nyou can add a category picture of the user in the system\n",
        "operationId": "CategoryPictureCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the category picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the category picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the category picture of the user",
        "description": "By passing in the appropriate options, \nyou can get the category picture of the user in the system\n",
        "operationId": "CategoryPictureInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the category picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "category"
        ],
        "summary": "updating of the category picture of the user",
        "description": "By passing in the appropriate options, \nyou can update the category picture of the user in the system\n",
        "operationId": "CategoryPictureUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for updating of the category picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the category picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "deleting of the category picture of the user",
        "description": "By passing in the appropriate options, \nyou can delete the category picture of the user in the system\n",
        "operationId": "CategoryPictureDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the category picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}/pictures/{picture_id}/alt-names": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "CategoryPictureAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "CategoryPictureAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/{category_id}/pictures/{picture_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "CategoryPictureAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "category"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "CategoryPictureAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "CategoryPictureAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/CategoryId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the ingredients of the user",
        "description": "By passing in the appropriate options, \nyou can get the ingredients of the user in the system\n",
        "operationId": "IngredientsInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the ingredients of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientsInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ingredient"
        ],
        "summary": "creating of the ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can add an ingredient of the user in the system\n",
        "operationId": "IngredientCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the ingredient of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can get the ingredient of the user in the system\n",
        "operationId": "IngredientInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "ingredient"
        ],
        "summary": "updating of the ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can update the ingredient of the user in the system\n",
        "operationId": "IngredientUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the ingredient of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ingredient"
        ],
        "summary": "deleting of the ingredient of the user",
        "description": "By passing in the appropriate options, \nyou can delete the ingredient of the user in the system\n",
        "operationId": "IngredientDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the ingredient of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}/alt-names": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "IngredientAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ingredient"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "IngredientAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "IngredientAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "ingredient"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "IngredientAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ingredient"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "IngredientAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}/pictures": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the ingredient pictures of the user",
        "description": "By passing in the appropriate options, \nyou can get the ingredient pictures of the user in the system\n",
        "operationId": "IngredientPicturesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the ingredient pictures of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicturesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ingredient"
        ],
        "summary": "creating of the ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can add a ingredient picture of the user in the system\n",
        "operationId": "IngredientPictureCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the ingredient picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can get the ingredient picture of the user in the system\n",
        "operationId": "IngredientPictureInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "ingredient"
        ],
        "summary": "updating of the ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can update the ingredient picture of the user in the system\n",
        "operationId": "IngredientPictureUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the ingredient picture of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PictureUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ingredient"
        ],
        "summary": "deleting of the ingredient picture of the user",
        "description": "By passing in the appropriate options, \nyou can delete the ingredient picture of the user in the system\n",
        "operationId": "IngredientPictureDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the ingredient picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}/pictures/{picture_id}/alt-names": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the alt-names of the user",
        "description": "By passing in the appropriate options, \nyou can get the alt-names of the user in the system\n",
        "operationId": "IngredientPictureAltNamesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-names of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNamesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ingredient"
        ],
        "summary": "creating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's alt-name of the user in the system\n",
        "operationId": "IngredientPictureAltNameCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredient_id}/pictures/{picture_id}/alt-names/{alt_name_id}": {
      "get": {
        "tags": [
          "ingredient"
        ],
        "summary": "info of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's alt-name of the user in the system\n",
        "operationId": "IngredientPictureAltNameInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "ingredient"
        ],
        "summary": "updating of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's alt-name of the user in the system\n",
        "operationId": "IngredientPictureAltNameUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the alt-name of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltNameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltNameInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ingredient"
        ],
        "summary": "deleting of the alt-name of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's alt-name of the user in the system\n",
        "operationId": "IngredientPictureAltNameDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/IngredientId"
          },
          {
            "$ref": "#/components/parameters/PictureId"
          },
          {
            "$ref": "#/components/parameters/AltNameId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the alt-name of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the planners of the user",
        "description": "By passing in the appropriate options, \nyou can get the planners of the user in the system\n",
        "operationId": "PlannersInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the planners of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannersInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "planner"
        ],
        "summary": "creating of the planner of the user",
        "description": "By passing in the appropriate options, \nyou can add an planner of the user in the system\n",
        "operationId": "PlannerCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the planner of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlannerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the planner of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners/{planner_id}": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the planner of the user",
        "description": "By passing in the appropriate options, \nyou can get the planner of the user in the system\n",
        "operationId": "PlannerInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the planner of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "planner"
        ],
        "summary": "updating of the planner of the user",
        "description": "By passing in the appropriate options, \nyou can update the planner of the user in the system\n",
        "operationId": "PlannerUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the planner of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlannerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the planner of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "planner"
        ],
        "summary": "deleting of the planner of the user",
        "description": "By passing in the appropriate options, \nyou can delete the planner of the user in the system\n",
        "operationId": "PlannerDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the planner of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners/{planner_id}/calculate": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the planner calculation of the user",
        "description": "By passing in the appropriate options, \nyou can get the planner calculation of the user in the system\n",
        "operationId": "PlannerCalculateInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the planner calculation of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerCalculationInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners/{planner_id}/intervals": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the planner intervals of the user",
        "description": "By passing in the appropriate options, \nyou can get the planner intervals of the user in the system\n",
        "operationId": "PlannerIntervalsInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the planner intervals of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerIntervalsInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "planner"
        ],
        "summary": "creating of the planner interval of the user",
        "description": "By passing in the appropriate options, \nyou can add a planner interval of the user in the system\n",
        "operationId": "PlannerIntervalCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the planner interval of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlannerIntervalUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the interval of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerIntervalInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners/{planner_id}/intervals/{interval_id}": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the planner interval of the user",
        "description": "By passing in the appropriate options, \nyou can get the planner interval of the user in the system\n",
        "operationId": "PlannerIntervalInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the interval of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerIntervalInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "planner"
        ],
        "summary": "updating of the planner interval of the user",
        "description": "By passing in the appropriate options, \nyou can update the planner interval of the user in the system\n",
        "operationId": "PlannerIntervalUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the planner interval of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlannerIntervalUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the interval of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerIntervalInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "planner"
        ],
        "summary": "deleting of the planner interval of the user",
        "description": "By passing in the appropriate options, \nyou can delete the planner interval of the user in the system\n",
        "operationId": "PlannerIntervalDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the planner interval of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners/{planner_id}/intervals/{interval_id}/recipes": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the recipes of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipes of the user in the system\n",
        "operationId": "PlannerIntervalRecipesInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipes of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerRecipesInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "planner"
        ],
        "summary": "creating of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can add a recipe's recipe of the user in the system\n",
        "operationId": "PlannerIntervalRecipeCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for creating of the recipe of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlannerRecipeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerRecipeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/planners/{planner_id}/intervals/{interval_id}/recipes/{recipe_id}": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "info of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can get the recipe's recipe of the user in the system\n",
        "operationId": "PlannerIntervalRecipeInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerRecipeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "planner"
        ],
        "summary": "updating of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can update the recipe's recipe of the user in the system\n",
        "operationId": "PlannerIntervalRecipeUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for the updating of the recipe of the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlannerRecipeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannerRecipeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "planner"
        ],
        "summary": "deleting of the recipe of the user",
        "description": "By passing in the appropriate options, \nyou can delete the recipe's recipe of the user in the system\n",
        "operationId": "PlannerIntervalRecipeDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/PlannerId"
          },
          {
            "$ref": "#/components/parameters/IntervalId"
          },
          {
            "$ref": "#/components/parameters/RecipeId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the deleting info of the recipe of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/users/{user_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "user info",
        "description": "By passing in the appropriate options, \nyou can get the user in the system\n",
        "operationId": "UserRoleInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "user updating",
        "description": "By passing in the appropriate options, \nyou can update the user in the system\n",
        "operationId": "AdminUserUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowOrigin"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowCredentials"
          },
          {
            "$ref": "#/components/parameters/AccessControlAllowMethods"
          }
        ],
        "requestBody": {
          "description": "Include data for user updating",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "403": {
            "description": "Request is forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthCredentialsRequest": {
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "AuthConfirmationRequest": {
        "required": [
          "username",
          "password",
          "code"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "code": {
            "type": "string",
            "example": "code"
          }
        }
      },
      "AuthTokenResponse": {
        "required": [
          "access_token",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "access_token"
          },
          "refresh_token": {
            "type": "string",
            "example": "refresh_token"
          }
        }
      },
      "UserInfoResponse": {
        "required": [
          "id",
          "date_insert",
          "date_update",
          "username",
          "name",
          "surname",
          "middle_name",
          "birthday",
          "status",
          "active",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "username": {
            "type": "string",
            "example": "username"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "surname": {
            "type": "string",
            "example": "surname"
          },
          "middle_name": {
            "type": "string",
            "example": "middle_name"
          },
          "birthday": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "enum": [
              "register",
              "need_confirmation",
              "disabled"
            ],
            "example": "register"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "common"
              ]
            },
            "example": [
              "admin"
            ]
          }
        }
      },
      "UserRegisterRequest": {
        "required": [
          "username",
          "password",
          "name",
          "surname",
          "middle_name",
          "birthday"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "surname": {
            "type": "string",
            "example": "surname"
          },
          "middle_name": {
            "type": "string",
            "example": "middle_name"
          },
          "birthday": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          }
        }
      },
      "UserUpdateRequest": {
        "required": [
          "username",
          "password",
          "name",
          "surname",
          "middle_name",
          "birthday"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "surname": {
            "type": "string",
            "example": "surname"
          },
          "middle_name": {
            "type": "string",
            "example": "middle_name"
          },
          "birthday": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          }
        }
      },
      "AdminUserUpdateRequest": {
        "required": [
          "username",
          "password",
          "name",
          "surname",
          "middle_name",
          "birthday",
          "status",
          "active",
          "roles"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "surname": {
            "type": "string",
            "example": "surname"
          },
          "middle_name": {
            "type": "string",
            "example": "middle_name"
          },
          "birthday": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "enum": [
              "register",
              "need_confirmation",
              "disabled"
            ],
            "example": "register"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "common"
              ]
            },
            "example": [
              "admin"
            ]
          }
        }
      },
      "UserDeleteRequest": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          }
        }
      },
      "RecipeUpdateRequest": {
        "required": [
          "name",
          "status",
          "description",
          "notes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          },
          "description": {
            "type": "string",
            "example": "description"
          },
          "notes": {
            "type": "string",
            "example": "notes"
          }
        }
      },
      "RecipeInfoResponse": {
        "required": [
          "alt_names",
          "entity",
          "categories",
          "ingredients",
          "processes",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/RecipeCategory"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeCategoryInfoResponse"
            }
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredientInfoResponse"
            }
          },
          "processes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeProcessInfoResponse"
            }
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureInfoResponse"
            }
          }
        }
      },
      "RecipesInfoResponse": {
        "required": [
          "recipes"
        ],
        "type": "object",
        "properties": {
          "recipes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeInfoResponse"
            }
          }
        }
      },
      "RecipeCategoryUpdateRequest": {
        "required": [
          "derive_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "derive_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "derive_id": "00000000-0000-0000-0000-000000000000",
          "status": "unpublished"
        }
      },
      "RecipeCategory": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "derive_id",
          "date_insert",
          "date_update",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "derive_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "derive_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "status": "unpublished"
        }
      },
      "RecipeCategoryInfoResponse": {
        "required": [
          "alt_names",
          "derive",
          "entity",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "derive": {
            "$ref": "#/components/schemas/CategoryInfoResponse"
          },
          "entity": {
            "$ref": "#/components/schemas/RecipeCategory"
          }
        }
      },
      "RecipeCategoriesInfoResponse": {
        "required": [
          "categories"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeCategoryInfoResponse"
            }
          }
        }
      },
      "RecipeIngredientUpdateRequest": {
        "required": [
          "derive_id",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "derive_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "derive_id": "00000000-0000-0000-0000-000000000000",
          "name": "name",
          "status": "unpublished"
        }
      },
      "RecipeIngredient": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "derive_id",
          "date_insert",
          "date_update",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "derive_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "derive_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "unpublished"
        }
      },
      "RecipeIngredientInfoResponse": {
        "required": [
          "alt_names",
          "derive",
          "entity",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          },
          "derive": {
            "$ref": "#/components/schemas/Ingredient"
          },
          "entity": {
            "$ref": "#/components/schemas/RecipeIngredient"
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureInfoResponse"
            }
          }
        }
      },
      "RecipeIngredientsInfoResponse": {
        "required": [
          "ingredients"
        ],
        "type": "object",
        "properties": {
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredientInfoResponse"
            }
          }
        }
      },
      "RecipeProcessUpdateRequest": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "name": "name",
          "status": "unpublished"
        }
      },
      "RecipeProcess": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "date_insert",
          "date_update",
          "name",
          "description",
          "notes",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "description": {
            "type": "string",
            "example": "description"
          },
          "notes": {
            "type": "string",
            "example": "notes"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "description": "description",
          "notes": "notes",
          "status": "unpublished"
        }
      },
      "RecipeProcessInfoResponse": {
        "required": [
          "alt_names",
          "entity",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/RecipeProcess"
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureInfoResponse"
            }
          }
        }
      },
      "RecipeMeasureUpdateRequest": {
        "required": [
          "unit_id",
          "value",
          "status"
        ],
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "value": {
            "type": "integer",
            "example": 42
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "unit_id": "00000000-0000-0000-0000-000000000000",
          "value": 42,
          "status": "unpublished"
        }
      },
      "RecipeMeasure": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "unit_id",
          "date_insert",
          "date_update",
          "value",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "unit_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "value": {
            "type": "integer",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "unit_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "value": 42,
          "status": "unpublished"
        }
      },
      "RecipeMeasureInfoResponse": {
        "required": [
          "alt_names",
          "entity",
          "units"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/RecipeMeasure"
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitInfoResponse"
            }
          }
        }
      },
      "RecipeMeasuresInfoResponse": {
        "required": [
          "measures"
        ],
        "type": "object",
        "properties": {
          "measures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeMeasureInfoResponse"
            }
          }
        }
      },
      "RecipeProcessesInfoResponse": {
        "required": [
          "processes"
        ],
        "type": "object",
        "properties": {
          "processes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeProcessInfoResponse"
            }
          }
        }
      },
      "CategoryUpdateRequest": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "name": "name",
          "status": "unpublished"
        }
      },
      "Category": {
        "required": [
          "id",
          "user_id",
          "date_insert",
          "date_update",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "unpublished"
        }
      },
      "CategoryInfoResponse": {
        "required": [
          "alt_names",
          "entity",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/Category"
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureInfoResponse"
            }
          }
        }
      },
      "CategoriesInfoResponse": {
        "required": [
          "categories"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryInfoResponse"
            }
          }
        }
      },
      "IngredientUpdateRequest": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "name": "name",
          "status": "unpublished"
        }
      },
      "Ingredient": {
        "required": [
          "id",
          "user_id",
          "date_insert",
          "date_update",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "unpublished"
        }
      },
      "IngredientInfoResponse": {
        "required": [
          "alt_names",
          "entity",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/Ingredient"
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureInfoResponse"
            }
          }
        }
      },
      "IngredientsInfoResponse": {
        "required": [
          "ingredients"
        ],
        "type": "object",
        "properties": {
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientInfoResponse"
            }
          }
        }
      },
      "PictureUpdateRequest": {
        "required": [
          "name",
          "url",
          "width",
          "height",
          "size",
          "type",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "url": {
            "type": "string",
            "example": "url"
          },
          "width": {
            "type": "integer",
            "example": "1920"
          },
          "height": {
            "type": "integer",
            "example": "1080"
          },
          "size": {
            "type": "integer",
            "example": "690001"
          },
          "type": {
            "type": "string",
            "example": "image/jpg"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "name": "name",
          "url": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_light_color_272x92dp.png",
          "width": 544,
          "height": 184,
          "size": 14,
          "type": "image/png",
          "status": "unpublished"
        }
      },
      "Picture": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "date_insert",
          "date_update",
          "name",
          "url",
          "width",
          "height",
          "size",
          "type",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "url": {
            "type": "string",
            "example": "url"
          },
          "width": {
            "type": "integer",
            "example": "1920"
          },
          "height": {
            "type": "integer",
            "example": "1080"
          },
          "size": {
            "type": "integer",
            "example": "690001"
          },
          "type": {
            "type": "string",
            "example": "image/jpg"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "url": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_light_color_272x92dp.png",
          "width": 544,
          "height": 184,
          "size": 14,
          "type": "image/png",
          "status": "unpublished"
        }
      },
      "PictureInfoResponse": {
        "required": [
          "entity",
          "alt_names"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Picture"
          },
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          }
        }
      },
      "PicturesInfoResponse": {
        "required": [
          "pictures"
        ],
        "type": "object",
        "properties": {
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureInfoResponse"
            }
          }
        }
      },
      "UnitUpdateRequest": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "name": "name",
          "status": "unpublished"
        }
      },
      "Unit": {
        "required": [
          "id",
          "date_insert",
          "date_update",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "unpublished"
        }
      },
      "UnitInfoResponse": {
        "required": [
          "entity",
          "alt_names"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Unit"
          },
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          }
        }
      },
      "UnitsInfoResponse": {
        "required": [
          "units"
        ],
        "type": "object",
        "properties": {
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitInfoResponse"
            }
          }
        }
      },
      "AltNameUpdateRequest": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "name": "name",
          "status": "unpublished"
        }
      },
      "AltNameInfoResponse": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "date_insert",
          "date_update",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "unpublished"
        }
      },
      "AltNamesInfoResponse": {
        "required": [
          "alt_names"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltNameInfoResponse"
            }
          }
        }
      },
      "PlannerUpdateRequest": {
        "required": [
          "start_time",
          "end_time",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "end_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "start_time": "2000-01-01T00:00:00Z",
          "end_time": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "inactive"
        }
      },
      "Planner": {
        "required": [
          "id",
          "user_id",
          "date_insert",
          "date_update",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "start_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "end_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "published",
              "unpublished"
            ],
            "example": "unpublished"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "start_time": "2000-01-01T00:00:00Z",
          "end_time": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "inactive"
        }
      },
      "PlannerInfoResponse": {
        "required": [
          "entity",
          "intervals"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Planner"
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannerIntervalInfoResponse"
            }
          }
        }
      },
      "PlannersInfoResponse": {
        "required": [
          "planners"
        ],
        "type": "object",
        "properties": {
          "planners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannerInfoResponse"
            }
          }
        }
      },
      "PlannerIntervalUpdateRequest": {
        "required": [
          "start_time",
          "end_time",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "end_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          }
        },
        "example": {
          "start_time": "2000-01-01T00:00:00Z",
          "end_time": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "inactive"
        }
      },
      "PlannerInterval": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "date_insert",
          "date_update",
          "start_time",
          "end_time",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "start_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "end_time": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "start_time": "2000-01-01T00:00:00Z",
          "end_time": "2000-01-01T00:00:00Z",
          "name": "name",
          "status": "inactive"
        }
      },
      "PlannerIntervalInfoResponse": {
        "required": [
          "entity",
          "recipes"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PlannerInterval"
          },
          "recipes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannerRecipeInfoResponse"
            }
          }
        }
      },
      "PlannerIntervalsInfoResponse": {
        "required": [
          "planner_intervals"
        ],
        "type": "object",
        "properties": {
          "planner_intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannerIntervalInfoResponse"
            }
          }
        }
      },
      "PlannerRecipeUpdateRequest": {
        "required": [
          "recipe_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "recipe_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          }
        },
        "example": {
          "recipe_id": "00000000-0000-0000-0000-000000000000",
          "status": "inactive"
        }
      },
      "PlannerRecipe": {
        "required": [
          "id",
          "user_id",
          "entity_id",
          "recipe_id",
          "date_insert",
          "date_update",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "entity_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "recipe_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "date_insert": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "date_update": {
            "type": "string",
            "example": "2000-01-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          }
        },
        "example": {
          "id": "00000000-0000-0000-0000-000000000000",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "entity_id": "00000000-0000-0000-0000-000000000000",
          "recipe_id": "00000000-0000-0000-0000-000000000000",
          "date_insert": "2000-01-01T00:00:00Z",
          "date_update": "2000-01-01T00:00:00Z",
          "status": "inactive"
        }
      },
      "PlannerRecipeInfoResponse": {
        "required": [
          "entity",
          "recipe"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PlannerRecipe"
          },
          "recipe": {
            "$ref": "#/components/schemas/RecipeInfoResponse"
          }
        }
      },
      "PlannerRecipesInfoResponse": {
        "required": [
          "planner_recipes"
        ],
        "type": "object",
        "properties": {
          "alt_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannerRecipeInfoResponse"
            }
          }
        }
      },
      "PlannerCalculation": {
        "required": [
          "ingredient",
          "unit",
          "amount"
        ],
        "type": "object",
        "properties": {
          "ingredient": {
            "$ref": "#/components/schemas/IngredientInfoResponse"
          },
          "unit": {
            "$ref": "#/components/schemas/UnitInfoResponse"
          },
          "amount": {
            "type": "integer",
            "example": 42
          }
        }
      },
      "PlannerCalculationInfoResponse": {
        "required": [
          "overall"
        ],
        "type": "object",
        "properties": {
          "overall": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannerCalculation"
            }
          }
        }
      },
      "StatusResponse": {
        "required": [
          "status",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "OK"
          }
        }
      }
    },
    "responses": {
      "AuthCredentialsConfirmationResponse": {
        "description": "Sent data to confirm for credentials"
      },
      "AuthTokenResponse": {
        "description": "Return a token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthTokenResponse"
            }
          }
        }
      },
      "ContinueResponse": {
        "description": "Request is passed"
      },
      "BadRequestErrorResponse": {
        "description": "Request is invalid"
      },
      "ForbiddenRequestErrorResponse": {
        "description": "Request is forbidden"
      },
      "UnauthorizedErrorResponse": {
        "description": "Access token is missing or invalid"
      },
      "UserDeleteResponse": {
        "description": "User delete response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StatusResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "UserId": {
        "name": "user_id",
        "in": "path",
        "description": "User UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "RecipeId": {
        "name": "recipe_id",
        "in": "path",
        "description": "Recipe UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "CategoryId": {
        "name": "category_id",
        "in": "path",
        "description": "Category UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "IngredientId": {
        "name": "ingredient_id",
        "in": "path",
        "description": "Ingredient UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "ProcessId": {
        "name": "process_id",
        "in": "path",
        "description": "Process UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "PictureId": {
        "name": "picture_id",
        "in": "path",
        "description": "Picture UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "MeasureId": {
        "name": "measure_id",
        "in": "path",
        "description": "Measure UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "UnitId": {
        "name": "unit_id",
        "in": "path",
        "description": "Unit UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "AltNameId": {
        "name": "alt_name_id",
        "in": "path",
        "description": "AltName UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "PlannerId": {
        "name": "planner_id",
        "in": "path",
        "description": "PlannerId UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "IntervalId": {
        "name": "interval_id",
        "in": "path",
        "description": "IntervalId UUID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "00000000-0000-0000-0000-000000000000"
      },
      "AccessControlAllowOrigin": {
        "name": "Access-Control-Allow-Origin",
        "in": "header",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "http://ml-planner.co.uk:8092/docs/"
      },
      "AccessControlAllowCredentials": {
        "name": "Access-Control-Allow-Credentials",
        "in": "header",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "boolean"
        },
        "example": true
      },
      "AccessControlAllowMethods": {
        "name": "Access-Control-Allow-Methods",
        "in": "header",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "example": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "OPTIONS"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}